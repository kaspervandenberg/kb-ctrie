* Tests
** Separate items
*** DONE Store and retrieve single item [8/8]
**** DONE Store and retrieve single item
**** DONE Store and make-ctrie should return a ctrie
**** DONE `Store` should signal condition on non-ctrie
**** DONE `Retrieve` should signal condition on non-ctrie
**** DONE `Retrieve` should handle no-value like GETHASH does
**** DONE Decide expected behaviour of `store` twice
**** DONE The second call to `store` should overwrite the earlier stored value
**** DONE `Remove` should set the value to no value;
     a subsequent `retrieve` should behave the same as on a freshly created ctrie.
*** TODO Store and retrieve multiple items [1/4]
**** DONE Store two items with different keys and retrieve them
**** TODO Retrieve should not be able to retrieve an item stored with a different
     key
**** TODO After storing two items and remove one of them, retrieve should only be
     able to retrieve the one that was not removed
**** TODO Store, retrieve, and remove should work in any order
** Multi level Trie
*** Display Trie (for debugging)
*** Hierarchical keys
** Mutable CTrie
** Persistence
** Performance
*** Read performance counters about cache misses
*** What is the effect of separating subtrees to different cores/processors?
    This would avoid sharing mutable data.
*** What is the effect of restricting CNode size (or avarage CNode size) to cache line size?
    Cache lines are loaded as one from memory.
*** Minimize data required to load
*** Macros to generate different ctrie variants depending on intended use pattern and hardware
